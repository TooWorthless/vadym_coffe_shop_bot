from telebot import TeleBot
from modules.handlers.base_handler import BaseHandler
from services.catalog_service import CatalogService
from services.feedback_service import FeedbackService

class UserHandlers(BaseHandler):
    def register_handlers(self):
        @self.bot.message_handler(func=lambda message: message.text == "‚òï –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫–∞—Ç–∞–ª–æ–≥")
        def catalog(message):
            try:
                catalog_service = CatalogService(self.db)
                products = catalog_service.get_catalog()
                if not products:
                    self.bot.send_message(message.chat.id, "‚òπÔ∏è –ö–∞—Ç–∞–ª–æ–≥ –ø–æ–∫–∏ –ø–æ—Ä–æ–∂–Ω—ñ–π!")
                else:
                    self.bot.send_message(message.chat.id, "‚òï –û—Å—å –Ω–∞—à–∞ –∫–∞–≤–æ–≤–∞ –∫–æ–ª–µ–∫—Ü—ñ—è:", 
                                         reply_markup=self.keyboard.catalog_menu(products))
            except Exception as e:
                self.bot.send_message(message.chat.id, f"‚òπÔ∏è –©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫: {str(e)}. –°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑!")

        @self.bot.message_handler(func=lambda message: message.text == "‚ÑπÔ∏è –ü—Ä–æ –Ω–∞—Å")
        def info(message):
            self.bot.reply_to(message, "üëã –ú–∏ ‚Äî Vadyms Coffee Bot! –¢–≤—ñ–π –ø–æ–º—ñ—á–Ω–∏–∫ —É —Å–≤—ñ—Ç—ñ –∞—Ä–æ–º–∞—Ç–Ω–æ—ó –∫–∞–≤–∏. "
                                      "–ó–∞–º–æ–≤–ª—è–π —É–ª—é–±–ª–µ–Ω–∏–π –Ω–∞–ø—ñ–π —á–µ—Ä–µ–∑ –∫–∞—Ç–∞–ª–æ–≥ —ñ –Ω–∞—Å–æ–ª–æ–¥–∂—É–π—Å—è! ‚òï")

        @self.bot.message_handler(func=lambda message: message.text == "‚ùì –î–æ–ø–æ–º–æ–≥–∞")
        def help(message):
            self.bot.reply_to(message, "‚ú® –û—Å—å —â–æ —è –≤–º—ñ—é:\n"
                                     "‚òï –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫–∞—Ç–∞–ª–æ–≥ ‚Äî –Ω–∞—à –∞—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç\n"
                                     "‚ÑπÔ∏è –ü—Ä–æ –Ω–∞—Å ‚Äî —Ö—Ç–æ –º–∏ —Ç–∞–∫—ñ\n"
                                     "‚ùì –î–æ–ø–æ–º–æ–≥–∞ ‚Äî —Å–ø–∏—Å–æ–∫ –¥—ñ–π\n"
                                     "üí¨ /feedback ‚Äî –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è –≤—Ä–∞–∂–µ–Ω–Ω—è–º–∏\n"
                                     "üîí –î–ª—è –∞–¥–º—ñ–Ω—ñ–≤: /admin")

        @self.bot.message_handler(commands=['start'])
        def start(message):
            self.bot.reply_to(message, "‚òï –í—ñ—Ç–∞—î–º–æ –≤ Vadyms Coffee Bot! –ì–æ—Ç—É—î–º–æ –Ω–∞–π–∫—Ä–∞—â—É –∫–∞–≤—É –¥–ª—è —Ç–µ–±–µ! ‚òï\n–û–±–µ—Ä–∏, —â–æ —Ö–æ—á–µ—à:", 
                              reply_markup=self.keyboard.main_menu())

        @self.bot.message_handler(commands=['feedback'])
        def feedback(message):
            msg = self.bot.reply_to(message, "üí¨ –†–æ–∑–∫–∞–∂–∏, —â–æ –¥—É–º–∞—î—à –ø—Ä–æ –Ω–∞—à—É –∫–∞–≤—É —á–∏ —Å–µ—Ä–≤—ñ—Å!")
            self.bot.register_next_step_handler(msg, self.process_feedback)

    def process_feedback(self, message):
        try:
            feedback_service = FeedbackService(self.db)
            feedback_service.save_feedback(message.from_user.id, message.text)
            self.bot.reply_to(message, "üåü –î—è–∫—É—î–º–æ –∑–∞ —Ç–≤—ñ–π –≤—ñ–¥–≥—É–∫! –í—ñ–Ω —Ä–æ–±–∏—Ç—å –Ω–∞—Å –∫—Ä–∞—â–∏–º–∏!")
        except Exception as e:
            self.bot.reply_to(message, f"‚òπÔ∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–±–µ—Ä–µ–≥—Ç–∏ –≤—ñ–¥–≥—É–∫: {str(e)}. –°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑!")