from telebot import types
from core.abstractions import KeyboardBuilder

class TelegramKeyboard(KeyboardBuilder):
    def main_menu(self):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton('‚òï –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫–∞—Ç–∞–ª–æ–≥'),
                   types.KeyboardButton('‚ÑπÔ∏è –ü—Ä–æ –Ω–∞—Å'),
                   types.KeyboardButton('‚ùì –î–æ–ø–æ–º–æ–≥–∞'))
        return markup

    def admin_menu(self):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton('‚ûï –î–æ–¥–∞—Ç–∏ –∫–∞–≤—É'),
                   types.KeyboardButton('‚ûñ –í–∏–¥–∞–ª–∏—Ç–∏ –∫–∞–≤—É'),
                   types.KeyboardButton('üì¶ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è'))
        return markup

    def catalog_menu(self, products: dict):
        markup = types.InlineKeyboardMarkup()
        for key, item in products.items():
            btn = types.InlineKeyboardButton(f"‚òï {item['name']} ‚Äî {item['price']} –≥—Ä–Ω", callback_data=key)
            markup.add(btn)
        return markup

    def product_details(self, key: str):
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("üõí –ó–∞–º–æ–≤–∏—Ç–∏ –∑–∞—Ä–∞–∑", callback_data=f"order_{key}"))
        return markup

    def order_confirmation(self):
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", callback_data="confirm_order"),
                   types.InlineKeyboardButton("‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏", callback_data="cancel_order"))
        return markup